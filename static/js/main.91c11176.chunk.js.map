{"version":3,"sources":["components/provider.js","components/Sidebar/Content.js","components/Sidebar/index.js","components/CSdocs/ReactMarkdownHandler.js","components/ThreeScene/ThreeScene.js","components/ThreeScene/index.js","components/CSdocs/index.js","components/CSdocs/style.js","App.js","index.js"],"names":["AppContext","React","createContext","props","useState","contentUrl","setContentUrl","Provider","value","children","Content","useContext","contentObj","home","url","icon","slug","types","frontend","brix_index","brix_class","brix_tutorial","licence","oss","schema","specs","contentItemsArray","conObj","item","ListItem","key","button","onClick","changeContentUrl","ListItemIcon","ListItemText","primary","push","contentItem","Sidebar","ReactMarkdownHandler","srcURL","content","setContent","thisContentURL","repoURL","startsWith","sp","split","newURL","replace","length","useEffect","axios","get","mode","then","response","data","className","source","transformImageUri","uri","style","height","width","Component","makeStyles","theme","modal","background","dialogPaper","overflow","minWidth","useStyles","title","flexGrow","fontSize","fontWeight","CSlogo","display","alignItems","justifyContent","borderRadius","mixins","toolbar","root","color","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","flexShrink","drawerPaper","position","whiteSpace","drawerHeader","padding","spacing","contentShift","CSdocs","classes","useTheme","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","Typography","component","variant","noWrap","window","href","src","alt","Drawer","anchor","paper","Box","boxShadow","direction","Divider","List","tableContainer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91c11176.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nexport const AppContext = React.createContext();\r\n\r\nexport default props => {\r\n    const [contentUrl, setContentUrl] = useState(\"README.md\");\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                contentUrl,\r\n                setContentUrl\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { AppContext } from \"../provider\";\n\nexport function Content() {\n    const { setContentUrl } = useContext(AppContext);\n    const changeContentUrl = (url) => {\n        setContentUrl(url);\n    };\n\n    const contentObj = {\n        home: { url: \"README.md\", icon: <HomeIcon />, slug: \"Home\" },\n        types: {\n            url: \"./docs/md/types.md\",\n            icon: <DescriptionIcon />,\n            slug: \"CS Types\",\n        },\n        frontend: {\n            url:\n                \"https://raw.githubusercontent.com/CityScope/CS_cityscopeJS/master/README.md\",\n            icon: <DescriptionIcon />,\n            slug: \"CityScopeJS\",\n        },\n\n        brix_index: {\n            url:\n                \"https://raw.githubusercontent.com/CityScope/CS_Brix/master/docs/markdown/index.md\",\n            icon: <DescriptionIcon />,\n            slug: \"brix: intro\",\n        },\n        brix_class: {\n            url:\n                \"https://raw.githubusercontent.com/CityScope/CS_Brix/master/docs/markdown/classes.md\",\n            icon: <DescriptionIcon />,\n            slug: \"brix: class\",\n        },\n\n        brix_tutorial: {\n            url:\n                \"https://raw.githubusercontent.com/CityScope/CS_Brix/master/docs/markdown/tutorial.md\",\n            icon: <DescriptionIcon />,\n            slug: \"brix: tutorial\",\n        },\n\n        licence: {\n            url: \"./docs/md/licences.md\",\n            icon: <DescriptionIcon />,\n            slug: \"licences\",\n        },\n        oss: {\n            url: \"./docs/md/opensource.md\",\n            icon: <DescriptionIcon />,\n            slug: \"open-source\",\n        },\n        schema: {\n            url: \"./docs/md/schema_archive.md\",\n            icon: <ErrorOutlineIcon />,\n            slug: \"(archive) schema\",\n        },\n        specs: {\n            url: \"./docs/md/specs_archive.md\",\n            icon: <ErrorOutlineIcon />,\n            slug: \"(archive) specs\",\n        },\n    };\n\n    let contentItem = () => {\n        let contentItemsArray = [];\n        for (const conObj in contentObj) {\n            const url = contentObj[conObj].url;\n            const slug = contentObj[conObj].slug;\n            const icon = contentObj[conObj].icon;\n            let item = (\n                <ListItem\n                    key={conObj}\n                    button\n                    onClick={() => {\n                        changeContentUrl(url);\n                    }}\n                >\n                    <ListItemIcon>{icon}</ListItemIcon>\n                    <ListItemText primary={slug} />\n                </ListItem>\n            );\n\n            contentItemsArray.push(item);\n        }\n        return contentItemsArray;\n    };\n    return <div>{contentItem()}</div>;\n}\n","import React from \"react\";\nimport { Content } from \"./Content\";\n\nexport default function Sidebar() {\n    return (\n        <div>\n            <Content />\n        </div>\n    );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { AppContext } from \"../provider\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ReactMarkdownHandler() {\r\n    const [content, setContent] = useState();\r\n    const { contentUrl: thisContentURL } = useContext(AppContext);\r\n\r\n    let repoURL =\r\n        \"https://raw.githubusercontent.com/CityScope/cityscope.github.io/dev/\";\r\n\r\n    // if URL of remote repo, return that\r\n    let srcURL;\r\n\r\n    if (thisContentURL.startsWith(\"http\")) {\r\n        srcURL = thisContentURL;\r\n        // replace the repoURL with the remote URL for image loading\r\n        let sp = thisContentURL.split(\"/\");\r\n        // create new URL without the filename\r\n        let newURL = thisContentURL.replace(sp[sp.length - 1], \"\");\r\n        repoURL = newURL;\r\n    } else {\r\n        srcURL = `${repoURL}${thisContentURL}`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(srcURL, {\r\n                mode: \"no-cors\",\r\n            })\r\n            .then((response) => {\r\n                setContent(response.data);\r\n            });\r\n    }, [srcURL]);\r\n\r\n    return (\r\n        <div className=\"result-pane\">\r\n            <ReactMarkdown\r\n                className=\"result\"\r\n                source={content}\r\n                transformImageUri={(uri) => {\r\n                    return uri.startsWith(\"http\") ? uri : `${repoURL}${uri}`;\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./ThreeScene.css\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader.js\";\n\nconst style = {\n    height: \"80vh\",\n    width: \"80vw\",\n};\n\nexport default class ThreeScene extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.count = 200;\n        this.paths = [\"./resources/mlcs.obj\", \"./resources/lego.obj\"];\n    }\n\n    componentDidMount() {\n        this._sceneSetup();\n        this._loadOBJmodel();\n        this.startAnimationLoop();\n        window.addEventListener(\"resize\", this.handleWindowResize);\n    }\n\n    componentWillUnmount() {\n        window.cancelAnimationFrame(this.requestID);\n        window.removeEventListener(\"resize\", this.handleWindowResize);\n    }\n\n    _sceneSetup = () => {\n        const width = this.mountingDiv.clientWidth;\n        const height = this.mountingDiv.clientHeight;\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(0x1d1f21);\n        this.camera = new THREE.PerspectiveCamera(\n            30,\n            window.innerWidth / window.innerHeight,\n            1,\n            1000\n        );\n\n        var ambientLight = new THREE.AmbientLight(0xcccccc, 0.2);\n        this.scene.add(ambientLight);\n        let pointLight = new THREE.PointLight(0xffffff, 0.8, 20);\n        pointLight.position.set(0, 0, 0);\n        this.camera.add(pointLight);\n        this.scene.add(this.camera);\n        this.renderer = new THREE.WebGLRenderer({ antialias: true });\n        this.renderer.setSize(width, height);\n        this.mountingDiv.appendChild(this.renderer.domElement);\n    };\n\n    _loadOBJmodel = () => {\n        let count = this.count;\n        let rnd = this._rnd;\n        let scene = this.scene;\n        let material = new THREE.MeshStandardMaterial({\n            color: \"white\",\n        });\n\n        var loader = new OBJLoader();\n\n        this.paths.forEach((URL) => {\n            loader.load(URL, function (object) {\n                var wrapperObj = new THREE.Geometry();\n                var objMesh = new THREE.Mesh();\n                object.traverse(function (child) {\n                    if (child instanceof THREE.Mesh) {\n                        objMesh = child;\n                    }\n                });\n                var mlcsGeom = new THREE.Geometry().fromBufferGeometry(\n                    objMesh.geometry\n                );\n                mlcsGeom.scale(0.1, 0.1, 0.1);\n                for (let i = 0; i < count; i++) {\n                    let clone = mlcsGeom.clone();\n                    clone.translate(rnd(-10, 10), rnd(-10, 10), rnd(-10, 10));\n                    clone.rotateX(rnd(-50, 50));\n                    clone.rotateY(rnd(-50, 50));\n                    clone.rotateZ(rnd(-50, 50));\n                    wrapperObj.merge(clone);\n                }\n\n                let motherMesh = new THREE.Mesh(wrapperObj, material);\n                scene.add(motherMesh);\n            });\n        });\n    };\n\n    _rnd = (min, max) => {\n        return Math.random() * (max - min) + min;\n    };\n\n    handleWindowResize = () => {\n        const width = this.mountingDiv.clientWidth;\n        const height = this.mountingDiv.clientHeight;\n        this.renderer.setSize(width, height);\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    };\n\n    startAnimationLoop = () => {\n        this.animate();\n        this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n    };\n\n    animate = () => {\n        let timer = Date.now() * 0.00005;\n        this.camera.position.x = Math.sin(timer) * 5;\n        this.camera.position.z = Math.cos(timer) * 5;\n        this.camera.position.y = Math.cos(timer) * 5;\n\n        this.camera.lookAt(this.scene.position);\n        this.renderer.render(this.scene, this.camera);\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"legotitle\">\n                    <h1>here we build CityScope</h1>\n                </div>\n\n                <div\n                    style={style}\n                    ref={(div) => (this.mountingDiv = div)}\n                ></div>\n            </React.Fragment>\n        );\n    }\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ThreeScene from \"./ThreeScene\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        background: \"rgba(0,0,0,0.6)\",\n    },\n    dialogPaper: {\n        overflow: \"hidden\",\n        height: \"80vh\",\n        minWidth: \"80vw\",\n        background: \"rgb(0,0,0)\",\n    },\n}));\n\nexport default function ThreeModal() {\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(true);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <CssBaseline />\n\n            <Dialog\n                open={open}\n                className={classes.modal}\n                classes={{ paper: classes.dialogPaper }}\n                onClose={handleClose}\n                id={\"modal\"}\n            >\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"secondary\">\n                        (x) Close\n                    </Button>\n                </DialogActions>\n                <ThreeScene />\n            </Dialog>\n        </div>\n    );\n}\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport ReactMarkdownHandler from \"./ReactMarkdownHandler\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ThreeModal from \"../ThreeScene\";\r\nimport { style } from \"./style\";\r\n\r\nconst useStyles = style;\r\n\r\nexport default function CSdocs() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                {/* <ThreeModal /> */}\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(\r\n                            classes.menuButton,\r\n                            open && classes.hide\r\n                        )}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n                    <Typography\r\n                        component=\"h6\"\r\n                        variant=\"h6\"\r\n                        color=\"inherit\"\r\n                        noWrap\r\n                        className={classes.title}\r\n                    >\r\n                        MIT CityScope\r\n                    </Typography>\r\n\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={(props) =>\r\n                            window.open(\r\n                                \"https://github.com/CityScope\",\r\n                                \"_blank\"\r\n                            )\r\n                        }\r\n                    >\r\n                        <GitHubIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton className={classes.CSlogo}>\r\n                        <a href=\"https://www.media.mit.edu/projects/cityscope/overview/\">\r\n                            <img src=\"./resources/logo.png\" alt=\"\" />\r\n                        </a>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Box boxShadow={3} zIndex=\"modal\">\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === \"ltr\" ? (\r\n                                <ChevronLeftIcon />\r\n                            ) : (\r\n                                <ChevronRightIcon />\r\n                            )}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <Sidebar />\r\n                    </List>\r\n                    <Divider />\r\n                </Box>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <div className={classes.tableContainer}>\r\n                    <ReactMarkdownHandler />\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nexport const style = makeStyles((theme) => ({\n    title: {\n        flexGrow: 1,\n        fontSize: 15,\n        fontWeight: \"lighter\",\n    },\n\n    CSlogo: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        width: \"2em\",\n        borderRadius: \"none\",\n        height: \"auto\",\n        ...theme.mixins.toolbar,\n    },\n\n    root: {\n        display: \"flex\",\n        background: \"#1D1F21\",\n        color: \"#FFF\",\n    },\n    appBar: {\n        background: \"#1D1F21\",\n        zIndex: theme.zIndex.drawer + 1,\n        color: \"#FFF\",\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n\n    appBarShift: {\n        background: \"#1D1F21\",\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    hide: {\n        display: \"none\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        color: \"#FFF\",\n        background: \"#1D1F21\",\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\",\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing() * 3,\n        height: \"100vh\",\n        overflow: \"auto\",\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport CSdocs from \"./components/CSdocs\";\nimport Provider from \"./components/provider\";\n\nexport default class App extends Component {\n    render() {\n        return (\n            <Provider>\n                <CSdocs />\n            </Provider>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}