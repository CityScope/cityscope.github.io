(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{65:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return r})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return c}));var n=a(2),l=(a(0),a(86));const i={id:"CityIO"},r={unversionedId:"backend/CityIO",id:"backend/CityIO",isDocsHomePage:!1,title:"CityIO",description:"What is CityIO?",source:"@site/docs/backend/CityIO.md",slug:"/backend/CityIO",permalink:"/backend/CityIO",editUrl:"https://github.com/CityScope/cityscope.github.io/blob/new_docsite/docsite/docs/backend/CityIO.md",version:"current",sidebar:"sidebar",previous:{title:"GAMA",permalink:"/modules/GAMA"},next:{title:"API",permalink:"/backend/API"}},b=[{value:"welcome page with links to available tables",id:"welcome-page-with-links-to-available-tables",children:[]},{value:"dev endpoints",id:"dev-endpoints",children:[]},{value:"list available tables",id:"list-available-tables",children:[]},{value:"get table data",id:"get-table-data",children:[]},{value:"post table data",id:"post-table-data",children:[]},{value:"delete table data",id:"delete-table-data",children:[]},{value:"delete module data",id:"delete-module-data",children:[]}],o={rightToc:b};function c({components:e,...t}){return Object(l.b)("wrapper",Object(n.a)({},o,t,{components:e,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"what-is-cityio"},"What is CityIO?"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"data-hub (dump?) to have several clients work together")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"(lower case)architecture to enforce collaboration within network")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"server program"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"saves tables to have different software (visualization, simulation) read/write information"),Object(l.b)("li",{parentName:"ul"},"exposes a REST API (=url's) to serve json files, representiving table info")))),Object(l.b)("h1",{id:"resources"},"Resources"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/mitmedialab/cityioserver/wiki/API"},"API")),Object(l.b)("p",{parentName:"li"},"  shows the endpoint URLs for clients to operate various request through HTTP. (ex. Getting a table data, Updating table data... etc.)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("a",{parentName:"p",href:"https://github.com/mitmedialab/cityioserver/wiki/Client-Examples"},"Client Examples")),Object(l.b)("p",{parentName:"li"},"  shows hello world examples from each client in different frameworks (GAMA, Grasshopper, Unity ... etc)"))),Object(l.b)("h2",{id:"welcome-page-with-links-to-available-tables"},Object(l.b)("a",{parentName:"h2",href:"https://cityio.media.mit.edu"},"welcome page")," with links to available tables"),Object(l.b)("h1",{id:"api"},"API"),Object(l.b)("p",null,"[baseurl]"," ",Object(l.b)("a",{parentName:"p",href:"https://cityio.media.mit.edu"},"https://cityio.media.mit.edu")),Object(l.b)("h2",{id:"dev-endpoints"},"dev endpoints"),Object(l.b)("p",null,"endpoints in development will have /dev before the api"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"https://cityio.media.mit.edu/dev/api/table/:tableName")),Object(l.b)("h2",{id:"list-available-tables"},"list available tables"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"[GET] https://cityio.media.mit.edu/api/tables/list\n")),Object(l.b)("h2",{id:"get-table-data"},"get table data"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"[GET] https://cityio.media.mit.edu/api/table/:tableName\n")),Object(l.b)("p",null,"params:"),Object(l.b)("p",null,"  tableName : name of table"),Object(l.b)("p",null,"format: json/application"),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://cityio.media.mit.edu/table/:tableName"},"https://cityio.media.mit.edu/table/:tableName")," is ",Object(l.b)("strong",{parentName:"p"},"deprecated")),Object(l.b)("h2",{id:"post-table-data"},"post table data"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"[POST] https://cityio.media.mit.edu/api/table/update/:tableName\n")),Object(l.b)("p",null,"params:"),Object(l.b)("p",null,"  tableName: name of table"),Object(l.b)("p",null,"  body"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"text/plain")," or ",Object(l.b)("inlineCode",{parentName:"p"},"json/application")," format accepted."),Object(l.b)("p",null,"  text will be converted to json internally, will throw an error if it's not\nvalid json. Server welcomes any valid json, but only things inside ",Object(l.b)("inlineCode",{parentName:"p"},"objects")," and ",Object(l.b)("inlineCode",{parentName:"p"},"grid")," objects\nwill be used for comparison to detect uniqueness."),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://cityio.media.mit.edu/table/update/:tableName"},"https://cityio.media.mit.edu/table/update/:tableName")," is ",Object(l.b)("strong",{parentName:"p"},"deprecated")," "),Object(l.b)("h2",{id:"delete-table-data"},"delete table data"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"[GET] https://cityio.media.mit.edu/api/table/clear/:tablename\n")),Object(l.b)("p",null,"params:"),Object(l.b)("p",null,"  tableName: name of table"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"be careful! will delete all data from memory cache and DB")," "),Object(l.b)("h2",{id:"delete-module-data"},"delete module data"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"[GET] https://cityio.media.mit.edu/api/table/clear/:tablename/:modulename\n")),Object(l.b)("p",null,"params:"),Object(l.b)("p",null,"  tablename: name of table\nmodulename: name of module"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"be careful! will delete all data from memory cache and DB")," "),Object(l.b)("h1",{id:"how-to-run-it-locally"},"How to run it Locally"),Object(l.b)("p",null,"The current version is developed using rust."),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"install ",Object(l.b)("a",{parentName:"p",href:"https://www.rust-lang.org/tools/install"},"rust"))),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"clone this repository")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"clone ",Object(l.b)("a",{parentName:"p",href:"https://github.com/yasushisakai/sha256"},"sha256 repo")),Object(l.b)("p",{parentName:"li"},"this repo should live in the same directory as the main repo")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"get db credentials from yasushi, save it in the root of this repo")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"cargo run --bin server --release")),Object(l.b)("p",{parentName:"li"},"this will compile the program and run it in port 8080"))),Object(l.b)("p",null,"the server will now run locally"))}c.isMDXComponent=!0},86:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return u}));var n=a(0),l=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=l.a.createContext({}),p=function(e){var t=l.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},d=function(e){var t=p(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},m=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=n,u=d["".concat(r,".").concat(m)]||d[m]||s[m]||i;return a?l.a.createElement(u,b(b({ref:t},c),{},{components:a})):l.a.createElement(u,b({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=m;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:n,r[1]=b;for(var c=2;c<i;c++)r[c]=a[c];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);