"use strict";(self.webpackChunkcityscope_docs=self.webpackChunkcityscope_docs||[]).push([[581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"category","label":"CityScope","items":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Architecture","href":"/intro/system","docId":"intro/system","unlisted":false},{"type":"link","label":"Development on GitHub","href":"/intro/github","docId":"intro/github","unlisted":false}],"href":"/"},{"type":"category","label":"CityScopeJS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/cityscopejs/Introduction","docId":"cityscopejs/Introduction","unlisted":false},{"type":"link","label":"Opening a project","href":"/cityscopejs/Opening a project","docId":"cityscopejs/Opening a project","unlisted":false},{"type":"link","label":"Project view","href":"/cityscopejs/Project view","docId":"cityscopejs/Project view","unlisted":false}],"href":"/category/cityscopejs"},{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Brix","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/modules/brix/Introduction","docId":"modules/brix/Introduction","unlisted":false},{"type":"link","label":"DeckGL Modules","href":"/modules/brix/DeckGL Modules","docId":"modules/brix/DeckGL Modules","unlisted":false},{"type":"link","label":"Module example","href":"/modules/brix/Module example","docId":"modules/brix/Module example","unlisted":false}],"href":"/category/brix"},{"type":"category","label":"Core Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/modules/Core Modules/Introduction","docId":"modules/Core Modules/Introduction","unlisted":false}]},{"type":"link","label":"Types System","href":"/modules/Types System","docId":"modules/Types System","unlisted":false}],"href":"/category/modules"},{"type":"category","label":"CityIO","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/cityio/Introduction","docId":"cityio/Introduction","unlisted":false},{"type":"link","label":"Architecture","href":"/cityio/Architecture","docId":"cityio/Architecture","unlisted":false},{"type":"link","label":"CityIO - UI","href":"/cityio/CityIO - UI","docId":"cityio/CityIO - UI","unlisted":false},{"type":"link","label":"CityIO - Module","href":"/cityio/CityIO - Module","docId":"cityio/CityIO - Module","unlisted":false},{"type":"link","label":"CityIO - Core","href":"/cityio/CityIO - Core","docId":"cityio/CityIO - Core","unlisted":false},{"type":"link","label":"API","href":"/cityio/API","docId":"cityio/API","unlisted":false}],"href":"/category/cityio"},{"type":"category","label":"Tangible User Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CityScoPy","href":"/tanglibe user interfaces/CityScoPy","docId":"tanglibe user interfaces/CityScoPy","unlisted":false},{"type":"link","label":"RoboScope","href":"/tanglibe user interfaces/RoboScope","docId":"tanglibe user interfaces/RoboScope","unlisted":false},{"type":"link","label":"CityScope Table Design","href":"/tanglibe user interfaces/CityScope Table Design","docId":"tanglibe user interfaces/CityScope Table Design","unlisted":false}],"href":"/category/tangible-user-interfaces"},{"type":"category","label":"Archive","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"[Archive] H3 Grid","href":"/archive/h3/","docId":"archive/h3/h3","unlisted":false},{"type":"category","label":"[Archive] The brix library","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Examples","href":"/archive/brix/Examples/","docId":"archive/brix/Examples/Examples","unlisted":false},{"type":"link","label":"GAMA","href":"/archive/brix/GAMA","docId":"archive/brix/GAMA","unlisted":false},{"type":"link","label":"Tutorials","href":"/archive/brix/Tutorial/","docId":"archive/brix/Tutorial/Tutorial","unlisted":false}],"href":"/archive/brix/"},{"type":"category","label":"[Archive] CityIO","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API","href":"/archive/cityio/API","docId":"archive/cityio/API","unlisted":false},{"type":"link","label":"Build","href":"/archive/cityio/Build","docId":"archive/cityio/Build","unlisted":false},{"type":"link","label":"Internal_Note","href":"/archive/cityio/Internal_Note","docId":"archive/cityio/Internal_Note","unlisted":false}],"href":"/archive/cityio/"}],"href":"/category/archive"}],"collapsed":true,"collapsible":true}]},"docs":{"archive/brix/Brix":{"id":"archive/brix/Brix","title":"[Archive] The brix library","description":"Brix is a python library for CityScope modules which handles communication with City I/O.","sidebar":"sidebar"},"archive/brix/Examples/Examples":{"id":"archive/brix/Examples/Examples","title":"Examples","description":"Short examples","sidebar":"sidebar"},"archive/brix/GAMA":{"id":"archive/brix/GAMA","title":"GAMA","description":"Agent-Based Model developped in the CityScience group using Gama Platform and integrated in CityScope","sidebar":"sidebar"},"archive/brix/Tutorial/Tutorial":{"id":"archive/brix/Tutorial/Tutorial","title":"Tutorials","description":"This module also contains a set of other useful functions that integrate with brix.Handler and brix.Indicator.","sidebar":"sidebar"},"archive/cityio/API":{"id":"archive/cityio/API","title":"API","description":"Here is a list of APIs exposed for cityio.","sidebar":"sidebar"},"archive/cityio/Build":{"id":"archive/cityio/Build","title":"Build","description":"From version 3, the Dockerfile inside the repository can be used for","sidebar":"sidebar"},"archive/cityio/CityIO":{"id":"archive/cityio/CityIO","title":"[Archive] CityIO","description":"- data-hub (dump?) to have several clients work together","sidebar":"sidebar"},"archive/cityio/Internal_Note":{"id":"archive/cityio/Internal_Note","title":"Internal_Note","description":"this section is for internal maintenance only.","sidebar":"sidebar"},"archive/h3/h3":{"id":"archive/h3/h3","title":"[Archive] H3 Grid","description":"This documentation is under construction.","sidebar":"sidebar"},"cityio/API":{"id":"cityio/API","title":"API","description":"The CityIO HTTP API enables users to access and update information regarding the projects (grids).","sidebar":"sidebar"},"cityio/Architecture":{"id":"cityio/Architecture","title":"Architecture","description":"WebSockets: definition and use","sidebar":"sidebar"},"cityio/CityIO - Core":{"id":"cityio/CityIO - Core","title":"CityIO - Core","description":"The objective of this interface is to facilitate the integration of core modules into the CityScope network.","sidebar":"sidebar"},"cityio/CityIO - Module":{"id":"cityio/CityIO - Module","title":"CityIO - Module","description":"The aim of this interface is to enable user modules to access information about the grids created in CityIO, calculate Key Performance Indicators (KPIs), and then transmit them to the user interfaces.","sidebar":"sidebar"},"cityio/CityIO - UI":{"id":"cityio/CityIO - UI","title":"CityIO - UI","description":"The objective of this interface is to enable user interfaces to access information about the grids created in CityIO, as well as the Key Performance Indicators (KPIs) computed by the modules. Additionally, this interface will permit users to make changes to the grids.","sidebar":"sidebar"},"cityio/Introduction":{"id":"cityio/Introduction","title":"Introduction","description":"The purpose of this section is to outline the architecture and interfaces of CityIOWS, an updated version of CityIO that utilizes WebSockets for communication with modules and user interfaces.","sidebar":"sidebar"},"cityscopejs/Introduction":{"id":"cityscopejs/Introduction","title":"Introduction","description":"CityScope platform for the web","sidebar":"sidebar"},"cityscopejs/Opening a project":{"id":"cityscopejs/Opening a project","title":"Opening a project","description":"On the CityScopeJS landing page, there are two ways to access a project.","sidebar":"sidebar"},"cityscopejs/Project view":{"id":"cityscopejs/Project view","title":"Project view","description":"When you open a project, CityScopeJS will present you with the project view. This page aims to provide a workspace where you can manage your projects and visualize the outputs of modules. It consists of a navigation bar at the top of the screen, where you can click on different buttons to open several windows with various functionalities. The available options are:","sidebar":"sidebar"},"intro/github":{"id":"intro/github","title":"Development on GitHub","description":"CityScope is open-source software and is primarily hosted on GitHub. The organization structure is designed to facilitate the development and deployment of CityScope projects. The organization consists of two types of repositories: tools and cities.","sidebar":"sidebar"},"intro/intro":{"id":"intro/intro","title":"Introduction","description":"CityScope is a project conducted at the MIT Media Lab City Science group. It includes a slew of tangible and digital platforms dedicated to solving spatial design and urban planning challenges. The tools range from simulations that quantify the impact of disruptive interventions in cities to community engagement systems. We develop and deploy these tools around the world and maintain free and open-source community for the majority of our work.","sidebar":"sidebar"},"intro/system":{"id":"intro/system","title":"System Architecture","description":"CityScope is composed of a series of tools loosely connected to each other. The tools are developed in different languages and frameworks, and they communicate through a central server, CityIO.","sidebar":"sidebar"},"modules/brix/DeckGL Modules":{"id":"modules/brix/DeckGL Modules","title":"DeckGL Modules","description":"The main difference in using Brix WS compared to the previous version of Brix is the method of sending data to CityScope for visualization. The previous version of Brix allowed for various pre-defined visualizations, such as numeric with bars or graphs, heatmaps, or ABM, among others. While this was useful, it didn\'t offer enough flexibility for module makers to create complex visualizations with a variety of different elements. They were always constrained to using the same method to display data.","sidebar":"sidebar"},"modules/brix/Introduction":{"id":"modules/brix/Introduction","title":"Introduction","description":"This documentation is under construction. The content of the documentation may change without prior notice.","sidebar":"sidebar"},"modules/brix/Module example":{"id":"modules/brix/Module example","title":"Module example","description":"In this section, we present how to code an example DeckGL module on Brix WS that connects with a project in CityScopeJS and displays various visualizations.","sidebar":"sidebar"},"modules/Core Modules/Introduction":{"id":"modules/Core Modules/Introduction","title":"Introduction","description":"This documentation is under construction.","sidebar":"sidebar"},"modules/Types System":{"id":"modules/Types System","title":"Types System","description":"CityScope (CS) Types are the basic land-use units that can be combined and arranged to represent urban environments within the CityScope platform. CS Types are assigned to each cell within the grid that is overlaid over the urban area of enquiry. The grid provides unified segmentation, scale and a level of abstraction that can be easily manipulated by users. Each cell within the grid can either be fixed or dynamic, depending on project limits; fixed cells within a grid are not intended to be changeable by users; dynamic cells are intended for manipulation to interact with the CityScope platform. Interactions take place as users manipulate Types within the project area.","sidebar":"sidebar"},"tanglibe user interfaces/CityScope Table Design":{"id":"tanglibe user interfaces/CityScope Table Design","title":"CityScope Table Design","description":"CityScope Hardware","sidebar":"sidebar"},"tanglibe user interfaces/CityScoPy":{"id":"tanglibe user interfaces/CityScoPy","title":"CityScoPy","description":"Download latest release","sidebar":"sidebar"},"tanglibe user interfaces/RoboScope":{"id":"tanglibe user interfaces/RoboScope","title":"RoboScope","description":"Work in progress!","sidebar":"sidebar"}}}')}}]);