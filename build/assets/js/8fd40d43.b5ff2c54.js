"use strict";(self.webpackChunkcityscope_docs=self.webpackChunkcityscope_docs||[]).push([[402],{4358:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var s=i(4848),o=i(8453);const n={sidebar_position:2},r="System Architecture",c={id:"intro/system",title:"System Architecture",description:"CityScope is composed of a series of tools loosely connected to each other. The tools are developed in different languages and frameworks, and they communicate through a central server, CityIO.",source:"@site/docs/intro/system.md",sourceDirName:"intro",slug:"/intro/system",permalink:"/intro/system",draft:!1,unlisted:!1,editUrl:"https://github.com/CityScope/cityscope.github.io/docs/intro/system.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/"},next:{title:"Development on GitHub",permalink:"/intro/github"}},a={},l=[{value:"CityScopeJS",id:"cityscopejs",level:2},{value:"Figure: CityScopeJS Architecture (Photo: Ariel Noyman)",id:"figure-cityscopejs-architecture-photo-ariel-noyman",level:6},{value:"Modules",id:"modules",level:2},{value:"CityScope Server (cityIO)",id:"cityscope-server-cityio",level:2},{value:"Tangible User Interfaces",id:"tangible-user-interfaces",level:2}];function h(e){const t={a:"a",h1:"h1",h2:"h2",h6:"h6",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"system-architecture",children:"System Architecture"}),"\n",(0,s.jsx)(t.p,{children:"CityScope is composed of a series of tools loosely connected to each other. The tools are developed in different languages and frameworks, and they communicate through a central server, CityIO."}),"\n",(0,s.jsx)(t.h2,{id:"cityscopejs",children:"CityScopeJS"}),"\n",(0,s.jsx)(t.p,{children:"CityScopeJS is a modular, open-ended architecture for MIT CityScope project."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"User interface to interact with the CityScope projects"}),"\n",(0,s.jsx)(t.li,{children:"Uses CityIO Websockets to communicate with the server"}),"\n",(0,s.jsx)(t.li,{children:"New user experience and design for the CityScope projects"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"CityScopeJS Architecture",src:i(9473).A+"",width:"4001",height:"1771"})}),"\n",(0,s.jsx)(t.h6,{id:"figure-cityscopejs-architecture-photo-ariel-noyman",children:"Figure: CityScopeJS Architecture (Photo: Ariel Noyman)"}),"\n",(0,s.jsxs)(t.p,{children:["CityScopeJS includes several other modules for building, testing and deploying an end-to-end CityScope platform. Each module is developed as a standalone part of the system with minimal dependency on others. Data flow between modules is done using ",(0,s.jsx)(t.a,{href:"https://cityio.media.mit.edu",children:"cityIO"}),", which operates between the different modules."]}),"\n",(0,s.jsx)(t.h2,{id:"modules",children:"Modules"}),"\n",(0,s.jsx)(t.p,{children:"Different analysis modules calculate various indicators on urban performance, such as noise, mobility, energy and others. These analysis modules are developed by experts in each evaluation field."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Urban Indicators module: ",(0,s.jsx)(t.a,{href:"https://github.com/CityScope/CS_Urban_Indicators",children:"https://github.com/CityScope/CS_Urban_Indicators"})]}),"\n",(0,s.jsxs)(t.li,{children:["A service providing mobility simulation, Agent Based Simulation, and aggregated mobility prediction for CityScope projects ",(0,s.jsx)(t.a,{href:"https://github.com/CityScope/CS_Mobility_Service",children:"https://github.com/CityScope/CS_Mobility_Service"})]}),"\n",(0,s.jsxs)(t.li,{children:["Noise Modeling for Grasbrook, Hamburg: ",(0,s.jsx)(t.a,{href:"https://github.com/CityScope/CSL_Hamburg_Noise",children:"https://github.com/CityScope/CSL_Hamburg_Noise"})]}),"\n",(0,s.jsxs)(t.li,{children:["Agent Based Modeling ",(0,s.jsx)(t.a,{href:"https://github.com/CityScope/CS_Simulation_GAMA",children:"https://github.com/CityScope/CS_Simulation_GAMA"})]}),"\n",(0,s.jsxs)(t.li,{children:["Traffic Simulation module using DLR SUMO ",(0,s.jsx)(t.a,{href:"https://github.com/CityScope/CS_SUMOscope",children:"https://github.com/CityScope/CS_SUMOscope"})]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"cityscope-server-cityio",children:"CityScope Server (cityIO)"}),"\n",(0,s.jsx)(t.p,{children:"CityIO is a server program that saves tables to have different software (visualization, simulation) read/write information. It exposes an API to serve JSON files representing table info."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Enables the communication between the different components of the system."}),"\n",(0,s.jsx)(t.li,{children:"Saves the projects to access them seamlessly in all the components."}),"\n",(0,s.jsx)(t.li,{children:"Rebuilt to allow real-time communication, using WebSockets."}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["See ",(0,s.jsx)(t.a,{href:"https://github.com/CityScope/CS_CityIO",children:"https://github.com/CityScope/CS_CityIO"})]}),"\n",(0,s.jsx)(t.h2,{id:"tangible-user-interfaces",children:"Tangible User Interfaces"}),"\n",(0,s.jsx)(t.p,{children:"CityScope also includes tangible user interfaces (TUIs) that allow users to interact with the system in a physical way. These interfaces are developed using the CityScopeJS platform."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["CityScope Scanner: ",(0,s.jsx)(t.a,{href:"https://github.com/CityScope/CS_CityScoPy",children:"https://github.com/CityScope/CS_CityScoPy"})]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9473:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/CityScopeJS_arch-ed1917ce223b84765036b435c6877aba.jpg"},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var s=i(6540);const o={},n=s.createContext(o);function r(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);